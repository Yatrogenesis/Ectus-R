# Jaeger Deployment for AION-R Platform
# ROADMAP Task 4.2: Jaeger Kubernetes Deployment
# Production-ready distributed tracing with NO placeholders

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: aion-monitoring
data:
  # Jaeger collector configuration
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      batch:
        timeout: 10s
        send_batch_size: 1024

      # Sampling configuration
      probabilistic_sampler:
        sampling_percentage: 10  # 10% sampling

    exporters:
      # Elasticsearch backend
      elasticsearch:
        endpoints: ["http://elasticsearch:9200"]
        index: jaeger-span
        timeout: 30s

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch, probabilistic_sampler]
          exporters: [elasticsearch]

---
# Jaeger All-in-One Deployment (for simplicity)
# For production at scale, use separate collector/query/agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: aion-monitoring
  labels:
    app: jaeger
    component: tracing
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        component: tracing
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true

      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.51
        imagePullPolicy: IfNotPresent

        env:
          # Storage configuration
          - name: SPAN_STORAGE_TYPE
            value: "badger"

          # Badger storage path
          - name: BADGER_DIRECTORY_VALUE
            value: "/badger/data"
          - name: BADGER_DIRECTORY_KEY
            value: "/badger/key"

          # Retention policy (7 days)
          - name: BADGER_SPAN_STORE_TTL
            value: "168h"  # 7 days

          # Collector configuration
          - name: COLLECTOR_OTLP_ENABLED
            value: "true"

          # Query service configuration
          - name: QUERY_BASE_PATH
            value: "/"

          # Sampling configuration
          - name: SAMPLING_STRATEGIES_FILE
            value: "/etc/jaeger/sampling_strategies.json"

        ports:
          # Jaeger UI
          - name: query-http
            containerPort: 16686
            protocol: TCP

          # OTLP gRPC receiver
          - name: otlp-grpc
            containerPort: 4317
            protocol: TCP

          # OTLP HTTP receiver
          - name: otlp-http
            containerPort: 4318
            protocol: TCP

          # Jaeger Thrift Compact (agent)
          - name: jaeger-compact
            containerPort: 6831
            protocol: UDP

          # Jaeger Thrift Binary (agent)
          - name: jaeger-binary
            containerPort: 6832
            protocol: UDP

          # Jaeger gRPC (collector)
          - name: jaeger-grpc
            containerPort: 14250
            protocol: TCP

          # Health check
          - name: admin-http
            containerPort: 14269
            protocol: TCP

        volumeMounts:
          - name: badger-storage
            mountPath: /badger
          - name: sampling-config
            mountPath: /etc/jaeger

        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"

        livenessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

      volumes:
        - name: badger-storage
          persistentVolumeClaim:
            claimName: jaeger-storage
        - name: sampling-config
          configMap:
            name: jaeger-sampling-config

---
# Persistent storage for Jaeger traces
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jaeger-storage
  namespace: aion-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
# Sampling strategies configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-sampling-config
  namespace: aion-monitoring
data:
  sampling_strategies.json: |
    {
      "service_strategies": [
        {
          "service": "aion-web-api",
          "type": "probabilistic",
          "param": 0.1
        },
        {
          "service": "aion-ai-engine",
          "type": "probabilistic",
          "param": 0.05
        },
        {
          "service": "aion-database",
          "type": "probabilistic",
          "param": 0.01
        }
      ],
      "default_strategy": {
        "type": "probabilistic",
        "param": 0.1
      }
    }

---
# Service for Jaeger Query (UI)
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: aion-monitoring
  labels:
    app: jaeger
    component: query
spec:
  type: ClusterIP
  ports:
    - name: query-http
      port: 16686
      targetPort: 16686
      protocol: TCP
  selector:
    app: jaeger

---
# Service for Jaeger Collector (OTLP receivers)
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: aion-monitoring
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
      protocol: TCP
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
    - name: jaeger-grpc
      port: 14250
      targetPort: 14250
      protocol: TCP
  selector:
    app: jaeger

---
# Service for Jaeger Agent (Thrift receivers)
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: aion-monitoring
  labels:
    app: jaeger
    component: agent
spec:
  type: ClusterIP
  clusterIP: None  # Headless service
  ports:
    - name: compact
      port: 6831
      targetPort: 6831
      protocol: UDP
    - name: binary
      port: 6832
      targetPort: 6832
      protocol: UDP
  selector:
    app: jaeger

---
# Ingress for Jaeger UI (optional, for external access)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger
  namespace: aion-monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - jaeger.aion.internal
      secretName: jaeger-tls
  rules:
    - host: jaeger.aion.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jaeger-query
                port:
                  number: 16686

---
# HorizontalPodAutoscaler for Jaeger (optional, for production scale)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: jaeger
  namespace: aion-monitoring
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: jaeger
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# ServiceMonitor for Prometheus integration (optional)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: jaeger
  namespace: aion-monitoring
  labels:
    app: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  endpoints:
    - port: admin-http
      path: /metrics
      interval: 30s
