[package]
name = "aion-monitoring"
version = "0.1.0"
edition = "2021"
authors = ["AION Team <team@aion.dev>"]
description = "Comprehensive monitoring and observability stack for AION platform"
license = "MIT OR Apache-2.0"

[dependencies]
aion-core = { path = "../aion-core" }
tokio = { version = "1.35", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
async-trait = "0.1"
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "chrono"] }
tracing-opentelemetry = "0.21"
anyhow = "1.0"
thiserror = "1.0"

# Web server and API
axum = "0.7"
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace", "fs", "compression"] }
hyper = "1.0"
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }

# Database and persistence
sqlx = { version = "0.7", features = ["runtime-tokio-native-tls", "postgres", "mysql", "sqlite", "json", "uuid", "chrono", "decimal"] }
redis = { version = "0.24", features = ["tokio-comp", "json", "cluster", "streams"] }
sea-orm = { version = "0.12", features = ["sqlx-postgres", "runtime-tokio-rustls", "macros"] }

# Time series databases
influxdb = { version = "0.7", optional = true }
prometheus = { version = "0.13", optional = true }
clickhouse = { version = "0.11", optional = true }
elasticsearch = { version = "8.5", optional = true }

# Metrics and telemetry
metrics = "0.21"
metrics-exporter-prometheus = { version = "0.12", optional = true }
opentelemetry = { version = "0.21", features = ["rt-tokio"] }
opentelemetry-prometheus = { version = "0.14", optional = true }
opentelemetry-jaeger = { version = "0.20", optional = true }
opentelemetry-zipkin = { version = "0.19", optional = true }
opentelemetry-datadog = { version = "0.9", optional = true }
opentelemetry-honeycomb = { version = "0.1", optional = true }

# Distributed tracing
jaeger = { version = "0.20", optional = true }
zipkin = { version = "0.4", optional = true }
datadog-tracing = { version = "0.3", optional = true }

# Logging
log = "0.4"
env_logger = { version = "0.10", optional = true }
slog = { version = "2.7", optional = true }
slog-json = { version = "2.6", optional = true }
slog-async = { version = "2.8", optional = true }
flexi_logger = { version = "0.27", optional = true }

# Real-time streaming
kafka = { version = "0.9", optional = true }
pulsar = { version = "6.0", optional = true }
nats = { version = "0.24", optional = true }
redis-streams = "0.1"

# Message queues
lapin = "2.3"
amqp = "0.1"
rumqttc = "0.24"

# Alerting and notifications
lettre = { version = "0.11", features = ["smtp-transport", "rustls-tls", "builder"], optional = true }
slack-hook = { version = "0.8", optional = true }
discord = { version = "0.12", optional = true }
telegram-bot = { version = "0.8", optional = true }
twilio = "0.3"
sendgrid = "0.19"
mailgun = "0.11"

# Dashboard and visualization
plotters = { version = "0.3", optional = true }
egui = { version = "0.24", optional = true }
iced = { version = "0.10", optional = true }
yew = { version = "0.21", optional = true }

# Machine learning and anomaly detection
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }
smartcore = { version = "0.3", optional = true }
linfa = { version = "0.7", optional = true }
ndarray = "0.15"

# System monitoring
sysinfo = { version = "0.30", optional = true }
systemstat = { version = "0.2", optional = true }
procfs = { version = "0.16", optional = true }
psutil = { version = "3.2", optional = true }

# Network monitoring
pcap = { version = "1.0", optional = true }
pnet = { version = "0.34", optional = true }
netstat2 = { version = "0.9", optional = true }

# Performance profiling
pprof = { version = "0.12", optional = true }
perf-event = { version = "0.4", optional = true }
criterion = { version = "0.5", optional = true }

# Statistical analysis
statrs = { version = "0.16", optional = true }
statistical = { version = "1.0", optional = true }
outliers = { version = "0.2", optional = true }

# Configuration
config = "0.14"
clap = { version = "4.4", features = ["derive", "env"] }
validator = { version = "0.16", features = ["derive"] }

# Security and authentication
jsonwebtoken = { version = "9.2", optional = true }
ring = { version = "0.17", optional = true }
argon2 = { version = "0.5", optional = true }

# Compression and serialization
flate2 = "1.0"
lz4 = "1.24"
zstd = "0.13"
bincode = "1.3"
rmp-serde = "1.1"

# Async utilities
futures = "0.3"
tokio-stream = "0.1"
async-stream = "0.3"

# File system and I/O
walkdir = "2.4"
tempfile = "3.8"
notify = "6.1"

# Mathematical operations
num-traits = "0.2"
ordered-float = "4.2"

# Template engines
tera = "1.19"
handlebars = "4.5"
askama = "0.12"

# Rate limiting and circuit breaker
governor = "0.6"

# Health checks
health-check = "0.2"

# Testing and mocking
mockall = "0.12"
wiremock = "0.5"
testcontainers = "0.15"

[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.8"
criterion = "0.5"
proptest = "1.4"

[features]
default = ["prometheus", "jaeger", "influxdb", "grafana", "elastic"]
prometheus = ["dep:prometheus", "dep:metrics-exporter-prometheus", "dep:opentelemetry-prometheus"]
jaeger = ["dep:opentelemetry-jaeger", "dep:jaeger"]
zipkin = ["dep:opentelemetry-zipkin", "dep:zipkin"]
datadog = ["dep:opentelemetry-datadog", "dep:datadog-tracing"]
honeycomb = ["dep:opentelemetry-honeycomb"]
elastic = ["dep:elasticsearch"]
influxdb = ["dep:influxdb"]
clickhouse = ["dep:clickhouse"]
grafana = []
kibana = []
splunk = []
new-relic = []
dynatrace = []
appdynamics = []
machine-learning = ["dep:candle-core", "dep:candle-nn", "dep:smartcore", "dep:linfa"]
anomaly-detection = ["machine-learning", "dep:statrs", "dep:outliers"]
real-time-analytics = ["dep:kafka", "dep:pulsar", "dep:nats"]
advanced-visualization = ["dep:plotters", "dep:egui", "dep:iced"]
security-monitoring = ["dep:ring", "dep:argon2", "dep:jsonwebtoken"]
network-monitoring = ["dep:pcap", "dep:pnet", "dep:netstat2"]
system-monitoring = ["dep:sysinfo", "dep:systemstat", "dep:procfs", "dep:psutil"]
performance-profiling = ["dep:pprof", "dep:perf-event", "dep:criterion"]
distributed-tracing = ["jaeger", "zipkin", "datadog"]
log-aggregation = ["dep:slog", "dep:flexi_logger", "dep:env_logger"]
alerting = ["dep:lettre", "dep:slack-hook", "dep:discord", "dep:telegram-bot"]
dashboard = ["dep:yew", "dep:iced", "dep:egui"]
enterprise = ["machine-learning", "anomaly-detection", "advanced-visualization", "security-monitoring"]

[[bin]]
name = "aion-monitoring"
path = "src/bin/main.rs"

[[bin]]
name = "aion-metrics-collector"
path = "src/bin/metrics_collector.rs"

[[bin]]
name = "aion-log-aggregator"
path = "src/bin/log_aggregator.rs"

[[bin]]
name = "aion-alert-manager"
path = "src/bin/alert_manager.rs"

[[bin]]
name = "aion-dashboard-server"
path = "src/bin/dashboard_server.rs"

[[bin]]
name = "aion-test-runner"
path = "src/bin/test_runner.rs"