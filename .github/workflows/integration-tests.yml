# Integration Tests with Test Database
# Generated by AION-R AI Engine
# Addresses Audit Recommendation #1: Enable integration tests by default

name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ectus_test
          POSTGRES_USER: ectus_test
          POSTGRES_PASSWORD: test_password_12345
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-integration-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up test environment
        run: |
          echo "DATABASE_URL=postgresql://ectus_test:test_password_12345@localhost:5432/ectus_test" >> $GITHUB_ENV
          echo "REDIS_URL=redis://localhost:6379" >> $GITHUB_ENV
          echo "JWT_SECRET=test_jwt_secret_for_integration_tests_only" >> $GITHUB_ENV
          echo "RUST_LOG=debug" >> $GITHUB_ENV

      - name: Run database migrations
        run: |
          cargo install sqlx-cli --no-default-features --features postgres
          sqlx database create
          sqlx migrate run

      - name: Build test server
        run: cargo build --bin ectus-server --features test-mode

      - name: Start test server in background
        run: |
          cargo run --bin ectus-server &
          echo $! > server.pid
          sleep 5

      - name: Wait for server to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8080/health; do sleep 1; done'

      - name: Run integration tests
        run: cargo test --test '*' --features integration-tests -- --test-threads=1

      - name: Stop test server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            target/debug/test-results/
            *.log

      - name: Cleanup
        if: always()
        run: |
          sqlx database drop -y || true
