{"version":3,"file":"Analytics-CJDWfftI.js","sources":["../../src/pages/Analytics.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  ChartBarSquareIcon as ChartBarIcon,\r\n  UsersIcon,\r\n  EyeIcon,\r\n  CpuChipIcon,\r\n  ArrowUpIcon,\r\n  ArrowDownIcon,\r\n  CalendarIcon,\r\n  FunnelIcon,\r\n} from '@heroicons/react/24/outline'\r\nimport { useWebSocket } from '@/contexts/WebSocketContext'\r\nimport { cn, formatNumber, formatBytes } from '@/lib/utils'\r\n\r\ninterface MetricCard {\r\n  title: string\r\n  value: string\r\n  change: string\r\n  changeType: 'increase' | 'decrease' | 'neutral'\r\n  icon: React.ComponentType<any>\r\n  trend: number[]\r\n}\r\n\r\ninterface ChartData {\r\n  name: string\r\n  value: number\r\n  color?: string\r\n}\r\n\r\ninterface TimeSeriesData {\r\n  timestamp: string\r\n  users: number\r\n  pageViews: number\r\n  apiCalls: number\r\n  deployments: number\r\n}\r\n\r\nexport default function Analytics() {\r\n  const { subscribe } = useWebSocket()\r\n  const [timeRange, setTimeRange] = useState<'1h' | '24h' | '7d' | '30d'>('24h')\r\n  const [selectedMetrics, setSelectedMetrics] = useState<string[]>(['users', 'pageViews', 'apiCalls'])\r\n  const [realTimeData, setRealTimeData] = useState<TimeSeriesData[]>([])\r\n\r\n  // Mock analytics data\r\n  const metrics: MetricCard[] = [\r\n    {\r\n      title: 'Active Users',\r\n      value: '2,847',\r\n      change: '+12.5%',\r\n      changeType: 'increase',\r\n      icon: UsersIcon,\r\n      trend: [20, 35, 45, 30, 55, 40, 60, 45, 70, 50, 65, 80],\r\n    },\r\n    {\r\n      title: 'Page Views',\r\n      value: '156.2K',\r\n      change: '+8.3%',\r\n      changeType: 'increase',\r\n      icon: EyeIcon,\r\n      trend: [100, 120, 150, 130, 180, 160, 200, 170, 220, 190, 240, 260],\r\n    },\r\n    {\r\n      title: 'API Calls',\r\n      value: '89.4M',\r\n      change: '-2.1%',\r\n      changeType: 'decrease',\r\n      icon: ChartBarIcon,\r\n      trend: [800, 850, 920, 880, 940, 900, 960, 920, 890, 870, 850, 820],\r\n    },\r\n    {\r\n      title: 'CPU Usage',\r\n      value: '45.2%',\r\n      change: '+5.7%',\r\n      changeType: 'increase',\r\n      icon: CpuChipIcon,\r\n      trend: [30, 35, 40, 38, 45, 42, 48, 46, 50, 47, 45, 43],\r\n    },\r\n  ]\r\n\r\n  const trafficSources: ChartData[] = [\r\n    { name: 'Direct', value: 35, color: '#0ea5e9' },\r\n    { name: 'Organic Search', value: 28, color: '#10b981' },\r\n    { name: 'Social Media', value: 18, color: '#f59e0b' },\r\n    { name: 'Email', value: 12, color: '#8b5cf6' },\r\n    { name: 'Referral', value: 7, color: '#ef4444' },\r\n  ]\r\n\r\n  const topPages: Array<{ path: string; views: number; change: number }> = [\r\n    { path: '/', views: 12500, change: 15.2 },\r\n    { path: '/dashboard', views: 8900, change: 8.7 },\r\n    { path: '/projects', views: 6700, change: -2.1 },\r\n    { path: '/templates', views: 4500, change: 22.5 },\r\n    { path: '/marketplace', views: 3200, change: 45.8 },\r\n  ]\r\n\r\n  const userActivity: TimeSeriesData[] = [\r\n    { timestamp: '00:00', users: 120, pageViews: 890, apiCalls: 2400, deployments: 5 },\r\n    { timestamp: '02:00', users: 85, pageViews: 650, apiCalls: 1800, deployments: 2 },\r\n    { timestamp: '04:00', users: 45, pageViews: 320, apiCalls: 900, deployments: 1 },\r\n    { timestamp: '06:00', users: 78, pageViews: 580, apiCalls: 1500, deployments: 3 },\r\n    { timestamp: '08:00', users: 180, pageViews: 1200, apiCalls: 3200, deployments: 8 },\r\n    { timestamp: '10:00', users: 250, pageViews: 1800, apiCalls: 4500, deployments: 12 },\r\n    { timestamp: '12:00', users: 320, pageViews: 2400, apiCalls: 5800, deployments: 15 },\r\n    { timestamp: '14:00', users: 380, pageViews: 2900, apiCalls: 6200, deployments: 18 },\r\n    { timestamp: '16:00', users: 420, pageViews: 3200, apiCalls: 7000, deployments: 22 },\r\n    { timestamp: '18:00', users: 380, pageViews: 2800, apiCalls: 6500, deployments: 16 },\r\n    { timestamp: '20:00', users: 280, pageViews: 2100, apiCalls: 4800, deployments: 10 },\r\n    { timestamp: '22:00', users: 190, pageViews: 1400, apiCalls: 3200, deployments: 6 },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    setRealTimeData(userActivity)\r\n\r\n    const unsubscribe = subscribe('analytics_update', (payload) => {\r\n      setRealTimeData(prev => [...prev.slice(1), payload])\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [subscribe])\r\n\r\n  const getMaxValue = (data: TimeSeriesData[], metric: keyof TimeSeriesData) => {\r\n    return Math.max(...data.map(d => d[metric] as number))\r\n  }\r\n\r\n  const getMetricColor = (metric: string) => {\r\n    const colors: Record<string, string> = {\r\n      users: '#0ea5e9',\r\n      pageViews: '#10b981',\r\n      apiCalls: '#f59e0b',\r\n      deployments: '#8b5cf6',\r\n    }\r\n    return colors[metric] || '#6b7280'\r\n  }\r\n\r\n  const toggleMetric = (metric: string) => {\r\n    setSelectedMetrics(prev =>\r\n      prev.includes(metric)\r\n        ? prev.filter(m => m !== metric)\r\n        : [...prev, metric]\r\n    )\r\n  }\r\n\r\n  const SVGChart: React.FC<{ data: TimeSeriesData[], metrics: string[] }> = ({ data, metrics }) => {\r\n    const width = 800\r\n    const height = 300\r\n    const padding = 40\r\n\r\n    return (\r\n      <svg width={width} height={height} className=\"w-full h-auto\">\r\n        {/* Grid lines */}\r\n        {[0, 25, 50, 75, 100].map(y => (\r\n          <line\r\n            key={y}\r\n            x1={padding}\r\n            y1={padding + (y / 100) * (height - 2 * padding)}\r\n            x2={width - padding}\r\n            y2={padding + (y / 100) * (height - 2 * padding)}\r\n            stroke=\"#e5e7eb\"\r\n            strokeWidth=\"1\"\r\n          />\r\n        ))}\r\n\r\n        {/* Metric lines */}\r\n        {metrics.map((metric, metricIndex) => {\r\n          const maxValue = getMaxValue(data, metric as keyof TimeSeriesData)\r\n          const points = data.map((d, i) => {\r\n            const x = padding + (i / (data.length - 1)) * (width - 2 * padding)\r\n            const y = height - padding - ((d[metric as keyof TimeSeriesData] as number) / maxValue) * (height - 2 * padding)\r\n            return `${x},${y}`\r\n          }).join(' ')\r\n\r\n          return (\r\n            <polyline\r\n              key={metric}\r\n              points={points}\r\n              fill=\"none\"\r\n              stroke={getMetricColor(metric)}\r\n              strokeWidth=\"2\"\r\n              className=\"drop-shadow-sm\"\r\n            />\r\n          )\r\n        })}\r\n\r\n        {/* X-axis labels */}\r\n        {data.map((d, i) => (\r\n          i % 2 === 0 && (\r\n            <text\r\n              key={i}\r\n              x={padding + (i / (data.length - 1)) * (width - 2 * padding)}\r\n              y={height - 10}\r\n              textAnchor=\"middle\"\r\n              className=\"fill-gray-500 text-xs\"\r\n            >\r\n              {d.timestamp}\r\n            </text>\r\n          )\r\n        ))}\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-full\">\r\n      {/* Header */}\r\n      <div className=\"bg-white dark:bg-gray-900 shadow\">\r\n        <div className=\"px-4 sm:px-6 lg:max-w-6xl lg:mx-auto lg:px-8\">\r\n          <div className=\"py-6 md:flex md:items-center md:justify-between lg:border-t lg:border-gray-200 dark:lg:border-gray-700\">\r\n            <div className=\"flex-1 min-w-0\">\r\n              <h1 className=\"text-2xl font-bold leading-7 text-gray-900 dark:text-white sm:leading-9 sm:truncate\">\r\n                Analytics\r\n              </h1>\r\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n                Monitor performance and user behavior\r\n              </p>\r\n            </div>\r\n            <div className=\"mt-6 flex space-x-3 md:mt-0 md:ml-4\">\r\n              <select\r\n                value={timeRange}\r\n                onChange={(e) => setTimeRange(e.target.value as any)}\r\n                className=\"input w-auto\"\r\n              >\r\n                <option value=\"1h\">Last Hour</option>\r\n                <option value=\"24h\">Last 24 Hours</option>\r\n                <option value=\"7d\">Last 7 Days</option>\r\n                <option value=\"30d\">Last 30 Days</option>\r\n              </select>\r\n              <button className=\"btn btn-secondary\">\r\n                <FunnelIcon className=\"h-5 w-5 mr-2\" />\r\n                Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Metrics Grid */}\r\n        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4 mb-8\">\r\n          {metrics.map((metric) => (\r\n            <div key={metric.title} className=\"bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <metric.icon className=\"h-6 w-6 text-gray-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400 truncate\">\r\n                        {metric.title}\r\n                      </dt>\r\n                      <dd>\r\n                        <div className=\"flex items-baseline\">\r\n                          <div className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                            {metric.value}\r\n                          </div>\r\n                          <div className={cn(\r\n                            'ml-2 flex items-baseline text-sm font-semibold',\r\n                            metric.changeType === 'increase'\r\n                              ? 'text-green-600 dark:text-green-400'\r\n                              : metric.changeType === 'decrease'\r\n                              ? 'text-red-600 dark:text-red-400'\r\n                              : 'text-gray-500 dark:text-gray-400'\r\n                          )}>\r\n                            {metric.changeType === 'increase' ? (\r\n                              <ArrowUpIcon className=\"self-center flex-shrink-0 h-4 w-4\" />\r\n                            ) : metric.changeType === 'decrease' ? (\r\n                              <ArrowDownIcon className=\"self-center flex-shrink-0 h-4 w-4\" />\r\n                            ) : null}\r\n                            {metric.change}\r\n                          </div>\r\n                        </div>\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n                {/* Mini sparkline */}\r\n                <div className=\"mt-4\">\r\n                  <svg width=\"100%\" height=\"40\" className=\"text-primary-500\">\r\n                    <polyline\r\n                      points={metric.trend.map((value, index) =>\r\n                        `${(index / (metric.trend.length - 1)) * 100},${40 - (value / Math.max(...metric.trend)) * 35}`\r\n                      ).join(' ')}\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      vectorEffect=\"non-scaling-stroke\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Main Chart */}\r\n        <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n              User Activity Over Time\r\n            </h3>\r\n            <div className=\"flex items-center space-x-4\">\r\n              {['users', 'pageViews', 'apiCalls', 'deployments'].map(metric => (\r\n                <button\r\n                  key={metric}\r\n                  onClick={() => toggleMetric(metric)}\r\n                  className={cn(\r\n                    'flex items-center text-sm font-medium transition-colors',\r\n                    selectedMetrics.includes(metric)\r\n                      ? 'text-gray-900 dark:text-white'\r\n                      : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'\r\n                  )}\r\n                >\r\n                  <div\r\n                    className=\"w-3 h-3 rounded-full mr-2\"\r\n                    style={{ backgroundColor: getMetricColor(metric) }}\r\n                  />\r\n                  {metric.charAt(0).toUpperCase() + metric.slice(1)}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"h-80 flex items-center justify-center\">\r\n            <SVGChart data={realTimeData} metrics={selectedMetrics} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Traffic Sources */}\r\n          <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-6\">\r\n              Traffic Sources\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {trafficSources.map((source) => (\r\n                <div key={source.name} className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <div\r\n                      className=\"w-4 h-4 rounded-full mr-3\"\r\n                      style={{ backgroundColor: source.color }}\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {source.name}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <div className=\"flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2 w-24\">\r\n                      <div\r\n                        className=\"h-2 rounded-full transition-all duration-300\"\r\n                        style={{\r\n                          backgroundColor: source.color,\r\n                          width: `${source.value}%`\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400 w-8 text-right\">\r\n                      {source.value}%\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Top Pages */}\r\n          <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-6\">\r\n              Top Pages\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {topPages.map((page) => (\r\n                <div key={page.path} className=\"flex items-center justify-between\">\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\r\n                      {page.path}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                      {formatNumber(page.views)} views\r\n                    </p>\r\n                  </div>\r\n                  <div className={cn(\r\n                    'flex items-center text-sm font-semibold',\r\n                    page.change > 0\r\n                      ? 'text-green-600 dark:text-green-400'\r\n                      : 'text-red-600 dark:text-red-400'\r\n                  )}>\r\n                    {page.change > 0 ? (\r\n                      <ArrowUpIcon className=\"h-4 w-4 mr-1\" />\r\n                    ) : (\r\n                      <ArrowDownIcon className=\"h-4 w-4 mr-1\" />\r\n                    )}\r\n                    {Math.abs(page.change)}%\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Real-time Activity */}\r\n        <div className=\"mt-8 bg-white dark:bg-gray-800 shadow rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n              Real-time Activity\r\n            </h3>\r\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse\" />\r\n              Live\r\n            </div>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {realTimeData[realTimeData.length - 1]?.users || 0}\r\n              </div>\r\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Active Users</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {formatNumber(realTimeData[realTimeData.length - 1]?.pageViews || 0)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Page Views/Hour</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {formatNumber(realTimeData[realTimeData.length - 1]?.apiCalls || 0)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">API Calls/Hour</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {realTimeData[realTimeData.length - 1]?.deployments || 0}\r\n              </div>\r\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Deployments/Hour</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":["Analytics","subscribe","useWebSocket","timeRange","setTimeRange","useState","selectedMetrics","setSelectedMetrics","realTimeData","setRealTimeData","metrics","UsersIcon","EyeIcon","ChartBarIcon","CpuChipIcon","trafficSources","topPages","userActivity","useEffect","payload","prev","getMaxValue","data","metric","d","getMetricColor","toggleMetric","m","SVGChart","jsxs","y","jsx","metricIndex","maxValue","points","i","x","e","FunnelIcon","cn","ArrowUpIcon","ArrowDownIcon","value","index","source","page","formatNumber","_a","_b","_c","_d"],"mappings":"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"}