{"version":3,"file":"Dashboard-D813iiyy.js","sources":["../../src/hooks/useDashboard.ts","../../src/hooks/useProjects.ts","../../src/pages/Dashboard.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\r\nimport { getAPIClient } from '../lib/api-client'\r\n\r\n// Types for dashboard metrics\r\nexport interface DashboardMetrics {\r\n  totalProjects: number\r\n  activeDeployments: number\r\n  apiRequests: number\r\n  storageUsed: number\r\n  qualityScore: number\r\n  successRate: number\r\n}\r\n\r\nexport interface ActivityItem {\r\n  id: string\r\n  type: 'qa_analysis' | 'refactoring' | 'deployment' | 'build' | 'error' | 'user_action'\r\n  title: string\r\n  description: string\r\n  timestamp: string\r\n  status: 'success' | 'warning' | 'error' | 'info' | 'in_progress'\r\n  projectId?: string\r\n  details?: Record<string, any>\r\n}\r\n\r\nexport interface SystemHealth {\r\n  cpu: number\r\n  memory: number\r\n  storage: number\r\n  network: number\r\n  services: {\r\n    qa_engine: 'healthy' | 'degraded' | 'down'\r\n    refactoring_engine: 'healthy' | 'degraded' | 'down'\r\n    deployment_service: 'healthy' | 'degraded' | 'down'\r\n    monitoring: 'healthy' | 'degraded' | 'down'\r\n  }\r\n}\r\n\r\nexport interface QualityInsights {\r\n  averageQualityScore: number\r\n  totalAnalyses: number\r\n  issuesFound: number\r\n  issuesFixed: number\r\n  codeSmellsDetected: number\r\n  securityVulnerabilities: number\r\n  performanceIssues: number\r\n  testCoverage: number\r\n}\r\n\r\n// Dashboard API client\r\nclass DashboardAPI {\r\n  private baseUrl: string\r\n  private apiKey?: string\r\n\r\n  constructor() {\r\n    this.baseUrl = process.env.REACT_APP_API_URL || 'https://ectus-r-saas.pako-molina.workers.dev'\r\n    this.apiKey = process.env.REACT_APP_API_KEY\r\n  }\r\n\r\n  private async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<T> {\r\n    const url = `${this.baseUrl}${endpoint}`\r\n\r\n    const headers: HeadersInit = {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers,\r\n    }\r\n\r\n    if (this.apiKey) {\r\n      headers['Authorization'] = `Bearer ${this.apiKey}`\r\n    }\r\n\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers,\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`)\r\n    }\r\n\r\n    return response.json()\r\n  }\r\n\r\n  async getDashboardMetrics(): Promise<DashboardMetrics> {\r\n    try {\r\n      return await this.request<DashboardMetrics>('/api/dashboard/metrics')\r\n    } catch (error) {\r\n      console.warn('API call failed, using fallback metrics:', error)\r\n      return this.getFallbackMetrics()\r\n    }\r\n  }\r\n\r\n  async getRecentActivity(limit = 20): Promise<ActivityItem[]> {\r\n    try {\r\n      return await this.request<ActivityItem[]>(`/api/dashboard/activity?limit=${limit}`)\r\n    } catch (error) {\r\n      console.warn('API call failed, using fallback activity:', error)\r\n      return this.getFallbackActivity()\r\n    }\r\n  }\r\n\r\n  async getSystemHealth(): Promise<SystemHealth> {\r\n    try {\r\n      return await this.request<SystemHealth>('/api/dashboard/health')\r\n    } catch (error) {\r\n      console.warn('API call failed, using fallback health:', error)\r\n      return this.getFallbackHealth()\r\n    }\r\n  }\r\n\r\n  async getQualityInsights(): Promise<QualityInsights> {\r\n    try {\r\n      return await this.request<QualityInsights>('/api/dashboard/quality')\r\n    } catch (error) {\r\n      console.warn('API call failed, using fallback quality insights:', error)\r\n      return this.getFallbackQuality()\r\n    }\r\n  }\r\n\r\n  async runQualityAnalysis(projectId: string): Promise<{ analysisId: string }> {\r\n    try {\r\n      return await this.request<{ analysisId: string }>('/api/quality/analyze', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ projectId }),\r\n      })\r\n    } catch (error) {\r\n      console.warn('API call failed for quality analysis:', error)\r\n      return { analysisId: `analysis-${Date.now()}` }\r\n    }\r\n  }\r\n\r\n  async runRefactoring(projectId: string, refactoringType: string): Promise<{ refactoringId: string }> {\r\n    try {\r\n      return await this.request<{ refactoringId: string }>('/api/refactoring/run', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ projectId, refactoringType }),\r\n      })\r\n    } catch (error) {\r\n      console.warn('API call failed for refactoring:', error)\r\n      return { refactoringId: `refactoring-${Date.now()}` }\r\n    }\r\n  }\r\n\r\n  private getFallbackMetrics(): DashboardMetrics {\r\n    return {\r\n      totalProjects: 12,\r\n      activeDeployments: 8,\r\n      apiRequests: 1200000,\r\n      storageUsed: 5.2 * 1024 * 1024 * 1024, // 5.2 GB\r\n      qualityScore: 87.5,\r\n      successRate: 94.2,\r\n    }\r\n  }\r\n\r\n  private getFallbackActivity(): ActivityItem[] {\r\n    const now = new Date()\r\n    return [\r\n      {\r\n        id: '1',\r\n        type: 'qa_analysis',\r\n        title: 'Quality analysis completed',\r\n        description: 'AI Chat Bot project analyzed - Quality score: 92.5%',\r\n        timestamp: new Date(now.getTime() - 2 * 60 * 1000).toISOString(),\r\n        status: 'success',\r\n        projectId: '1',\r\n        details: { qualityScore: 92.5, issuesFound: 3, issuesFixed: 1 }\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'refactoring',\r\n        title: 'Automated refactoring applied',\r\n        description: 'Extract method refactoring completed in Mobile App Backend',\r\n        timestamp: new Date(now.getTime() - 5 * 60 * 1000).toISOString(),\r\n        status: 'success',\r\n        projectId: '3',\r\n        details: { refactoringType: 'extract_method', filesChanged: 2 }\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'deployment',\r\n        title: 'AI Chat Bot deployed',\r\n        description: 'Successfully deployed to production environment',\r\n        timestamp: new Date(now.getTime() - 15 * 60 * 1000).toISOString(),\r\n        status: 'success',\r\n        projectId: '1'\r\n      },\r\n      {\r\n        id: '4',\r\n        type: 'build',\r\n        title: 'E-commerce API build failed',\r\n        description: 'Build failed due to type errors detected by QA engine',\r\n        timestamp: new Date(now.getTime() - 25 * 60 * 1000).toISOString(),\r\n        status: 'error',\r\n        projectId: '2'\r\n      },\r\n      {\r\n        id: '5',\r\n        type: 'qa_analysis',\r\n        title: 'Security vulnerabilities detected',\r\n        description: '2 high-priority security issues found in Payment Gateway',\r\n        timestamp: new Date(now.getTime() - 45 * 60 * 1000).toISOString(),\r\n        status: 'warning',\r\n        projectId: '6',\r\n        details: { securityIssues: 2, severity: 'high' }\r\n      },\r\n      {\r\n        id: '6',\r\n        type: 'refactoring',\r\n        title: 'Code modernization in progress',\r\n        description: 'Updating Analytics Dashboard to latest React patterns',\r\n        timestamp: new Date(now.getTime() - 60 * 60 * 1000).toISOString(),\r\n        status: 'in_progress',\r\n        projectId: '4'\r\n      }\r\n    ]\r\n  }\r\n\r\n  private getFallbackHealth(): SystemHealth {\r\n    return {\r\n      cpu: 45.2,\r\n      memory: 68.7,\r\n      storage: 34.1,\r\n      network: 12.8,\r\n      services: {\r\n        qa_engine: 'healthy',\r\n        refactoring_engine: 'healthy',\r\n        deployment_service: 'healthy',\r\n        monitoring: 'degraded'\r\n      }\r\n    }\r\n  }\r\n\r\n  private getFallbackQuality(): QualityInsights {\r\n    return {\r\n      averageQualityScore: 87.5,\r\n      totalAnalyses: 156,\r\n      issuesFound: 89,\r\n      issuesFixed: 67,\r\n      codeSmellsDetected: 42,\r\n      securityVulnerabilities: 12,\r\n      performanceIssues: 8,\r\n      testCoverage: 78.3\r\n    }\r\n  }\r\n}\r\n\r\n// Initialize the API client\r\nconst dashboardAPI = new DashboardAPI()\r\n\r\n// Main dashboard hook\r\nexport function useDashboard() {\r\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null)\r\n  const [activity, setActivity] = useState<ActivityItem[]>([])\r\n  const [health, setHealth] = useState<SystemHealth | null>(null)\r\n  const [quality, setQuality] = useState<QualityInsights | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const fetchDashboardData = useCallback(async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      const [metricsData, activityData, healthData, qualityData] = await Promise.all([\r\n        dashboardAPI.getDashboardMetrics(),\r\n        dashboardAPI.getRecentActivity(),\r\n        dashboardAPI.getSystemHealth(),\r\n        dashboardAPI.getQualityInsights(),\r\n      ])\r\n\r\n      setMetrics(metricsData)\r\n      setActivity(activityData)\r\n      setHealth(healthData)\r\n      setQuality(qualityData)\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch dashboard data')\r\n      console.error('Error fetching dashboard data:', err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const runQualityAnalysis = useCallback(async (projectId: string) => {\r\n    try {\r\n      const result = await dashboardAPI.runQualityAnalysis(projectId)\r\n\r\n      // Add activity item for the started analysis\r\n      const newActivity: ActivityItem = {\r\n        id: result.analysisId,\r\n        type: 'qa_analysis',\r\n        title: 'Quality analysis started',\r\n        description: `Quality analysis initiated for project ${projectId}`,\r\n        timestamp: new Date().toISOString(),\r\n        status: 'in_progress',\r\n        projectId,\r\n      }\r\n\r\n      setActivity(prev => [newActivity, ...prev])\r\n      return result\r\n    } catch (err) {\r\n      const error = err instanceof Error ? err.message : 'Failed to start quality analysis'\r\n      setError(error)\r\n      throw new Error(error)\r\n    }\r\n  }, [])\r\n\r\n  const runRefactoring = useCallback(async (projectId: string, refactoringType: string) => {\r\n    try {\r\n      const result = await dashboardAPI.runRefactoring(projectId, refactoringType)\r\n\r\n      // Add activity item for the started refactoring\r\n      const newActivity: ActivityItem = {\r\n        id: result.refactoringId,\r\n        type: 'refactoring',\r\n        title: 'Refactoring started',\r\n        description: `${refactoringType} refactoring initiated for project ${projectId}`,\r\n        timestamp: new Date().toISOString(),\r\n        status: 'in_progress',\r\n        projectId,\r\n        details: { refactoringType }\r\n      }\r\n\r\n      setActivity(prev => [newActivity, ...prev])\r\n      return result\r\n    } catch (err) {\r\n      const error = err instanceof Error ? err.message : 'Failed to start refactoring'\r\n      setError(error)\r\n      throw new Error(error)\r\n    }\r\n  }, [])\r\n\r\n  const refreshData = useCallback(() => {\r\n    fetchDashboardData()\r\n  }, [fetchDashboardData])\r\n\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    fetchDashboardData()\r\n  }, [fetchDashboardData])\r\n\r\n  // Auto-refresh every 30 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(fetchDashboardData, 30000)\r\n    return () => clearInterval(interval)\r\n  }, [fetchDashboardData])\r\n\r\n  return {\r\n    metrics,\r\n    activity,\r\n    health,\r\n    quality,\r\n    loading,\r\n    error,\r\n    runQualityAnalysis,\r\n    runRefactoring,\r\n    refreshData,\r\n    // Computed values\r\n    isSystemHealthy: health ? Object.values(health.services).every(status => status !== 'down') : false,\r\n    criticalIssues: activity.filter(item => item.status === 'error').length,\r\n    pendingActions: activity.filter(item => item.status === 'in_progress').length,\r\n  }\r\n}\r\n\r\n// Hook specifically for real-time activity monitoring\r\nexport function useActivityStream() {\r\n  const [activity, setActivity] = useState<ActivityItem[]>([])\r\n  const [isConnected, setIsConnected] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // In a real implementation, this would connect to a WebSocket or SSE\r\n    // For now, we'll simulate with polling\r\n    const fetchActivity = async () => {\r\n      try {\r\n        const data = await dashboardAPI.getRecentActivity(50)\r\n        setActivity(data)\r\n        setIsConnected(true)\r\n      } catch (error) {\r\n        setIsConnected(false)\r\n        console.error('Failed to fetch activity stream:', error)\r\n      }\r\n    }\r\n\r\n    fetchActivity()\r\n    const interval = setInterval(fetchActivity, 5000) // Poll every 5 seconds\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  const addActivity = useCallback((item: Omit<ActivityItem, 'id' | 'timestamp'>) => {\r\n    const newItem: ActivityItem = {\r\n      ...item,\r\n      id: `activity-${Date.now()}`,\r\n      timestamp: new Date().toISOString(),\r\n    }\r\n    setActivity(prev => [newItem, ...prev.slice(0, 49)]) // Keep only 50 latest\r\n  }, [])\r\n\r\n  return {\r\n    activity,\r\n    isConnected,\r\n    addActivity,\r\n  }\r\n}\r\n\r\n// Export the API client for direct usage\r\nexport { dashboardAPI }","import { useState, useEffect, useCallback } from 'react'\r\nimport { getAPIClient } from '../lib/api-client'\r\n\r\n// Types for the API integration\r\nexport interface Project {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  status: 'active' | 'inactive' | 'deploying' | 'error' | 'building'\r\n  language: string\r\n  framework: string\r\n  lastDeployment: string\r\n  createdAt: string\r\n  repository: string\r\n  environment: 'development' | 'staging' | 'production'\r\n  team: string[]\r\n  deploymentUrl?: string\r\n  visibility: 'public' | 'private'\r\n  tags: string[]\r\n}\r\n\r\nexport interface CreateProjectRequest {\r\n  name: string\r\n  description: string\r\n  language: string\r\n  framework: string\r\n  repository: string\r\n  environment: 'development' | 'staging' | 'production'\r\n  visibility: 'public' | 'private'\r\n  tags: string[]\r\n}\r\n\r\nexport interface ProjectFilters {\r\n  search?: string\r\n  status?: string\r\n  tags?: string[]\r\n  environment?: string\r\n}\r\n\r\nexport interface UseProjectsOptions {\r\n  autoRefresh?: boolean\r\n  refreshInterval?: number\r\n  filters?: ProjectFilters\r\n}\r\n\r\n// API client using the centralized APIClient\r\nconst apiClient = getAPIClient()\r\n\r\n// Fallback data for development (kept for offline mode)\r\nfunction getFallbackProjects(): Project[] {\r\n  return [\r\n      {\r\n        id: '1',\r\n        name: 'AI Chat Bot',\r\n        description: 'A modern chatbot application with natural language processing capabilities',\r\n        status: 'active',\r\n        language: 'TypeScript',\r\n        framework: 'React',\r\n        lastDeployment: '2024-01-15T10:30:00Z',\r\n        createdAt: '2024-01-01T00:00:00Z',\r\n        repository: 'github.com/company/ai-chatbot',\r\n        environment: 'production',\r\n        team: ['Alice Johnson', 'Bob Smith'],\r\n        deploymentUrl: 'https://chatbot.example.com',\r\n        visibility: 'private',\r\n        tags: ['AI', 'NLP', 'React'],\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'E-commerce API',\r\n        description: 'RESTful API for e-commerce platform with advanced features',\r\n        status: 'error',\r\n        language: 'Python',\r\n        framework: 'FastAPI',\r\n        lastDeployment: '2024-01-14T15:45:00Z',\r\n        createdAt: '2023-12-15T00:00:00Z',\r\n        repository: 'github.com/company/ecommerce-api',\r\n        environment: 'staging',\r\n        team: ['Charlie Brown', 'Diana Prince'],\r\n        visibility: 'private',\r\n        tags: ['API', 'E-commerce', 'Python'],\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Mobile App Backend',\r\n        description: 'High-performance backend service for mobile applications',\r\n        status: 'deploying',\r\n        language: 'Rust',\r\n        framework: 'Axum',\r\n        lastDeployment: '2024-01-15T09:15:00Z',\r\n        createdAt: '2024-01-10T00:00:00Z',\r\n        repository: 'github.com/company/mobile-backend',\r\n        environment: 'staging',\r\n        team: ['Eve Wilson'],\r\n        visibility: 'private',\r\n        tags: ['Mobile', 'Backend', 'Rust'],\r\n      },\r\n      {\r\n        id: '4',\r\n        name: 'Analytics Dashboard',\r\n        description: 'Real-time analytics dashboard with beautiful visualizations',\r\n        status: 'active',\r\n        language: 'JavaScript',\r\n        framework: 'Vue.js',\r\n        lastDeployment: '2024-01-14T14:20:00Z',\r\n        createdAt: '2023-11-20T00:00:00Z',\r\n        repository: 'github.com/company/analytics-dashboard',\r\n        environment: 'production',\r\n        team: ['Frank Miller', 'Grace Hopper'],\r\n        deploymentUrl: 'https://analytics.example.com',\r\n        visibility: 'public',\r\n        tags: ['Analytics', 'Dashboard', 'Vue'],\r\n      },\r\n      {\r\n        id: '5',\r\n        name: 'Documentation Site',\r\n        description: 'Comprehensive documentation website for all our products',\r\n        status: 'building',\r\n        language: 'JavaScript',\r\n        framework: 'Next.js',\r\n        lastDeployment: '2024-01-15T11:00:00Z',\r\n        createdAt: '2024-01-05T00:00:00Z',\r\n        repository: 'github.com/company/docs',\r\n        environment: 'development',\r\n        team: ['Helen Troy'],\r\n        visibility: 'public',\r\n        tags: ['Documentation', 'Next.js'],\r\n      },\r\n      {\r\n        id: '6',\r\n        name: 'Payment Gateway',\r\n        description: 'Secure payment processing service with multiple providers',\r\n        status: 'inactive',\r\n        language: 'Go',\r\n        framework: 'Gin',\r\n        lastDeployment: '2024-01-12T16:30:00Z',\r\n        createdAt: '2023-10-10T00:00:00Z',\r\n        repository: 'github.com/company/payment-gateway',\r\n        environment: 'production',\r\n        team: ['Ivan Petrov', 'Jane Doe'],\r\n        visibility: 'private',\r\n        tags: ['Payment', 'Security', 'Go'],\r\n      },\r\n    ]\r\n}\r\n\r\nfunction createMockProject(request: CreateProjectRequest): Project {\r\n    return {\r\n      id: `mock-${Date.now()}`,\r\n      name: request.name,\r\n      description: request.description,\r\n      status: 'building',\r\n      language: request.language,\r\n      framework: request.framework,\r\n      lastDeployment: new Date().toISOString(),\r\n      createdAt: new Date().toISOString(),\r\n      repository: request.repository,\r\n      environment: request.environment,\r\n      team: ['Current User'],\r\n      visibility: request.visibility,\r\n      tags: request.tags,\r\n    }\r\n}\r\n\r\n// Custom hook for project management\r\nexport function useProjects(options: UseProjectsOptions = {}) {\r\n  const [projects, setProjects] = useState<Project[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const { autoRefresh = false, refreshInterval = 30000, filters } = options\r\n\r\n  const fetchProjects = useCallback(async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      const data = await apiClient.getProjects(filters)\r\n      setProjects(data)\r\n    } catch (err) {\r\n      // Fallback to mock data if API fails\r\n      console.warn('API call failed, using fallback projects:', err)\r\n      setProjects(getFallbackProjects())\r\n      setError(null) // Don't show error to user in fallback mode\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [filters])\r\n\r\n  const createProject = useCallback(async (project: CreateProjectRequest) => {\r\n    try {\r\n      const newProject = await apiClient.createProject(project)\r\n      setProjects(prev => [newProject, ...prev])\r\n      return newProject\r\n    } catch (err) {\r\n      console.warn('API call failed, creating mock project:', err)\r\n      const mockProject = createMockProject(project)\r\n      setProjects(prev => [mockProject, ...prev])\r\n      return mockProject\r\n    }\r\n  }, [])\r\n\r\n  const updateProject = useCallback(async (id: string, updates: Partial<Project>) => {\r\n    try {\r\n      const updatedProject = await apiClient.updateProject(id, updates)\r\n      setProjects(prev =>\r\n        prev.map(project =>\r\n          project.id === id ? updatedProject : project\r\n        )\r\n      )\r\n      return updatedProject\r\n    } catch (err) {\r\n      console.warn('API call failed, updating locally:', err)\r\n      setProjects(prev =>\r\n        prev.map(project =>\r\n          project.id === id ? { ...project, ...updates } : project\r\n        )\r\n      )\r\n      return { ...updates, id } as Project\r\n    }\r\n  }, [])\r\n\r\n  const deleteProject = useCallback(async (id: string) => {\r\n    try {\r\n      await apiClient.deleteProject(id)\r\n      setProjects(prev => prev.filter(project => project.id !== id))\r\n    } catch (err) {\r\n      console.warn('API call failed for delete, removing locally:', err)\r\n      setProjects(prev => prev.filter(project => project.id !== id))\r\n    }\r\n  }, [])\r\n\r\n  const deployProject = useCallback(async (id: string, environment: string) => {\r\n    try {\r\n      const deployment = await apiClient.deployProject(id, environment)\r\n\r\n      // Update project status to deploying\r\n      await updateProject(id, {\r\n        status: 'deploying',\r\n        lastDeployment: new Date().toISOString(),\r\n        environment: environment as any,\r\n        deploymentUrl: deployment.deploymentUrl\r\n      })\r\n\r\n      return deployment\r\n    } catch (err) {\r\n      console.warn('API call failed for deployment:', err)\r\n      const mockDeployment = {\r\n        deploymentUrl: `https://${id}-${environment}.example.com`,\r\n        deploymentId: `deploy-${Date.now()}`,\r\n        status: 'deploying' as const\r\n      }\r\n      await updateProject(id, {\r\n        status: 'deploying',\r\n        lastDeployment: new Date().toISOString(),\r\n        environment: environment as any,\r\n        deploymentUrl: mockDeployment.deploymentUrl\r\n      })\r\n      return mockDeployment\r\n    }\r\n  }, [updateProject])\r\n\r\n  const refreshProjects = useCallback(() => {\r\n    fetchProjects()\r\n  }, [fetchProjects])\r\n\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    fetchProjects()\r\n  }, [fetchProjects])\r\n\r\n  // Auto-refresh setup\r\n  useEffect(() => {\r\n    if (!autoRefresh) return\r\n\r\n    const interval = setInterval(fetchProjects, refreshInterval)\r\n    return () => clearInterval(interval)\r\n  }, [autoRefresh, refreshInterval, fetchProjects])\r\n\r\n  return {\r\n    projects,\r\n    loading,\r\n    error,\r\n    createProject,\r\n    updateProject,\r\n    deleteProject,\r\n    deployProject,\r\n    refreshProjects,\r\n    // Computed values\r\n    activeProjects: projects.filter(p => p.status === 'active'),\r\n    inactiveProjects: projects.filter(p => p.status === 'inactive'),\r\n    deployingProjects: projects.filter(p => p.status === 'deploying' || p.status === 'building'),\r\n    errorProjects: projects.filter(p => p.status === 'error'),\r\n  }\r\n}\r\n\r\n// Hook for individual project management\r\nexport function useProject(id: string) {\r\n  const [project, setProject] = useState<Project | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [logs, setLogs] = useState<string[]>([])\r\n\r\n  const fetchProject = useCallback(async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      const data = await apiClient.getProject(id)\r\n      setProject(data)\r\n    } catch (err) {\r\n      console.warn('API call failed, using fallback project:', err)\r\n      const fallbackProjects = getFallbackProjects()\r\n      const fallbackProject = fallbackProjects.find(p => p.id === id)\r\n      if (fallbackProject) {\r\n        setProject(fallbackProject)\r\n      } else {\r\n        setError(err instanceof Error ? err.message : 'Failed to fetch project')\r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [id])\r\n\r\n  const fetchLogs = useCallback(async (limit = 100) => {\r\n    try {\r\n      const projectLogs = await apiClient.getProjectLogs(id, limit)\r\n      setLogs(projectLogs)\r\n    } catch (err) {\r\n      console.warn('API call failed for logs:', err)\r\n      setLogs([\r\n        `[${new Date().toISOString()}] Project ${id} logs unavailable`,\r\n        `[${new Date().toISOString()}] Using fallback mode for development`,\r\n      ])\r\n    }\r\n  }, [id])\r\n\r\n  const updateProject = useCallback(async (updates: Partial<Project>) => {\r\n    try {\r\n      const updatedProject = await apiClient.updateProject(id, updates)\r\n      setProject(updatedProject)\r\n      return updatedProject\r\n    } catch (err) {\r\n      console.warn('API call failed, updating locally:', err)\r\n      const updated = { ...project, ...updates } as Project\r\n      setProject(updated)\r\n      return updated\r\n    }\r\n  }, [id, project])\r\n\r\n  useEffect(() => {\r\n    fetchProject()\r\n    fetchLogs()\r\n  }, [fetchProject, fetchLogs])\r\n\r\n  return {\r\n    project,\r\n    loading,\r\n    error,\r\n    logs,\r\n    updateProject,\r\n    refetch: fetchProject,\r\n    refreshLogs: fetchLogs,\r\n  }\r\n}\r\n\r\n// Export the API client for direct usage\r\nexport { apiClient }","import React from 'react'\r\nimport {\r\n  ChartBarSquareIcon as ChartBarIcon,\r\n  FolderIcon,\r\n  UsersIcon,\r\n  CpuChipIcon,\r\n  ArrowUpIcon,\r\n  ArrowDownIcon,\r\n  PlayIcon,\r\n  StopIcon,\r\n  EyeIcon,\r\n  CheckCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  XCircleIcon,\r\n  InformationCircleIcon,\r\n} from '@heroicons/react/24/outline'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useWebSocket } from '@/contexts/WebSocketContext'\r\nimport { useDashboard } from '@/hooks/useDashboard'\r\nimport { useProjects } from '@/hooks/useProjects'\r\nimport { cn, formatNumber, formatBytes } from '@/lib/utils'\r\n\r\ninterface MetricCard {\r\n  title: string\r\n  value: string\r\n  change: string\r\n  changeType: 'increase' | 'decrease' | 'neutral'\r\n  icon: React.ComponentType<any>\r\n}\r\n\r\ninterface RecentActivity {\r\n  id: string\r\n  type: 'deployment' | 'build' | 'error' | 'user_action'\r\n  title: string\r\n  description: string\r\n  timestamp: string\r\n  status: 'success' | 'warning' | 'error' | 'info'\r\n}\r\n\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  status: 'active' | 'inactive' | 'deploying' | 'error'\r\n  lastDeployment: string\r\n  language: string\r\n  framework: string\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const { user } = useAuth()\r\n  const { isConnected } = useWebSocket()\r\n  const {\r\n    metrics,\r\n    activity,\r\n    health,\r\n    quality,\r\n    loading: dashboardLoading,\r\n    error: dashboardError,\r\n    runQualityAnalysis,\r\n    runRefactoring,\r\n    refreshData\r\n  } = useDashboard()\r\n  const {\r\n    projects,\r\n    loading: projectsLoading,\r\n    activeProjects,\r\n    deployingProjects\r\n  } = useProjects({ autoRefresh: true })\r\n\r\n  // Transform metrics for display\r\n  const metricCards: MetricCard[] = metrics ? [\r\n    {\r\n      title: 'Total Projects',\r\n      value: metrics.totalProjects.toString(),\r\n      change: '+2.1%',\r\n      changeType: 'increase' as const,\r\n      icon: FolderIcon,\r\n    },\r\n    {\r\n      title: 'Active Deployments',\r\n      value: metrics.activeDeployments.toString(),\r\n      change: '+12.5%',\r\n      changeType: 'increase' as const,\r\n      icon: PlayIcon,\r\n    },\r\n    {\r\n      title: 'API Requests',\r\n      value: formatNumber(metrics.apiRequests),\r\n      change: '-3.2%',\r\n      changeType: 'decrease' as const,\r\n      icon: ChartBarIcon,\r\n    },\r\n    {\r\n      title: 'Quality Score',\r\n      value: `${metrics.qualityScore.toFixed(1)}%`,\r\n      change: '+5.3%',\r\n      changeType: 'increase' as const,\r\n      icon: CpuChipIcon,\r\n    },\r\n  ] : []\r\n\r\n  // Get recent projects (first 4)\r\n  const recentProjects = projects.slice(0, 4).map(project => ({\r\n    id: project.id,\r\n    name: project.name,\r\n    status: project.status,\r\n    lastDeployment: formatTimeAgo(project.lastDeployment),\r\n    language: project.language,\r\n    framework: project.framework,\r\n  }))\r\n\r\n  // Transform activity for display\r\n  const recentActivity = activity.slice(0, 4).map(item => ({\r\n    id: item.id,\r\n    type: item.type as 'deployment' | 'build' | 'error' | 'user_action',\r\n    title: item.title,\r\n    description: item.description,\r\n    timestamp: formatTimeAgo(item.timestamp),\r\n    status: item.status,\r\n  }))\r\n\r\n  const handleQualityAnalysis = async (projectId: string) => {\r\n    try {\r\n      await runQualityAnalysis(projectId)\r\n      // Show success notification\r\n    } catch (error) {\r\n      console.error('Failed to start quality analysis:', error)\r\n      // Show error notification\r\n    }\r\n  }\r\n\r\n  const handleRefactoring = async (projectId: string, type: string) => {\r\n    try {\r\n      await runRefactoring(projectId, type)\r\n      // Show success notification\r\n    } catch (error) {\r\n      console.error('Failed to start refactoring:', error)\r\n      // Show error notification\r\n    }\r\n  }\r\n\r\n  // Format time ago helper\r\n  function formatTimeAgo(timestamp: string): string {\r\n    const date = new Date(timestamp)\r\n    const now = new Date()\r\n    const diffMs = now.getTime() - date.getTime()\r\n    const diffMins = Math.floor(diffMs / 60000)\r\n    const diffHours = Math.floor(diffMins / 60)\r\n    const diffDays = Math.floor(diffHours / 24)\r\n\r\n    if (diffMins < 1) return 'just now'\r\n    if (diffMins < 60) return `${diffMins} minute${diffMins === 1 ? '' : 's'} ago`\r\n    if (diffHours < 24) return `${diffHours} hour${diffHours === 1 ? '' : 's'} ago`\r\n    return `${diffDays} day${diffDays === 1 ? '' : 's'} ago`\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n      case 'success':\r\n        return 'text-green-600 bg-green-100 dark:text-green-400 dark:bg-green-900/20'\r\n      case 'deploying':\r\n      case 'warning':\r\n        return 'text-yellow-600 bg-yellow-100 dark:text-yellow-400 dark:bg-yellow-900/20'\r\n      case 'error':\r\n        return 'text-red-600 bg-red-100 dark:text-red-400 dark:bg-red-900/20'\r\n      case 'inactive':\r\n      case 'info':\r\n        return 'text-gray-600 bg-gray-100 dark:text-gray-400 dark:bg-gray-900/20'\r\n      default:\r\n        return 'text-gray-600 bg-gray-100 dark:text-gray-400 dark:bg-gray-900/20'\r\n    }\r\n  }\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return PlayIcon\r\n      case 'deploying':\r\n        return CpuChipIcon\r\n      case 'error':\r\n        return StopIcon\r\n      case 'inactive':\r\n        return StopIcon\r\n      default:\r\n        return EyeIcon\r\n    }\r\n  }\r\n\r\n  // Show loading state\r\n  if (dashboardLoading || projectsLoading) {\r\n    return (\r\n      <div className=\"min-h-full flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <CpuChipIcon className=\"mx-auto h-12 w-12 text-gray-400 animate-pulse\" />\r\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">Loading dashboard...</h3>\r\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n            Fetching your latest data and metrics\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Show error state\r\n  if (dashboardError) {\r\n    return (\r\n      <div className=\"min-h-full flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <XCircleIcon className=\"mx-auto h-12 w-12 text-red-400\" />\r\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">Failed to load dashboard</h3>\r\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n            {dashboardError}\r\n          </p>\r\n          <button\r\n            onClick={refreshData}\r\n            className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            Try again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-full\">\r\n      <div className=\"bg-white dark:bg-gray-900 shadow\">\r\n        <div className=\"px-4 sm:px-6 lg:max-w-6xl lg:mx-auto lg:px-8\">\r\n          <div className=\"py-6 md:flex md:items-center md:justify-between lg:border-t lg:border-gray-200 dark:lg:border-gray-700\">\r\n            <div className=\"flex-1 min-w-0\">\r\n              <div className=\"flex items-center\">\r\n                <div>\r\n                  <div className=\"flex items-center\">\r\n                    <h1 className=\"ml-3 text-2xl font-bold leading-7 text-gray-900 dark:text-white sm:leading-9 sm:truncate\">\r\n                      Welcome back, {user?.name}\r\n                    </h1>\r\n                  </div>\r\n                  <dl className=\"mt-6 flex flex-col sm:ml-3 sm:mt-1 sm:flex-row sm:flex-wrap\">\r\n                    <dt className=\"sr-only\">Account status</dt>\r\n                    <dd className=\"flex items-center text-sm text-gray-500 dark:text-gray-400 font-medium capitalize sm:mr-6\">\r\n                      <span className={cn(\r\n                        'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium mr-2',\r\n                        user?.subscription.plan === 'enterprise'\r\n                          ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400'\r\n                          : user?.subscription.plan === 'pro'\r\n                          ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400'\r\n                          : 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400'\r\n                      )}>\r\n                        {user?.subscription.plan}\r\n                      </span>\r\n                      Plan • {user?.usage.projects}/{user?.usage.limits.projects} projects\r\n                    </dd>\r\n                    <dt className=\"sr-only\">Connection status</dt>\r\n                    <dd className=\"mt-3 flex items-center text-sm text-gray-500 dark:text-gray-400 font-medium sm:mr-6 sm:mt-0\">\r\n                      <div className={cn(\r\n                        'w-2 h-2 rounded-full mr-2',\r\n                        isConnected ? 'bg-green-400' : 'bg-red-400'\r\n                      )} />\r\n                      {isConnected ? 'Connected' : 'Disconnected'}\r\n                    </dd>\r\n                  </dl>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8\">\r\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          {/* Metrics Grid */}\r\n          <div className=\"mt-2 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n            {metricCards.map((metric) => (\r\n              <div key={metric.title} className=\"bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg\">\r\n                <div className=\"p-5\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <metric.icon className=\"h-6 w-6 text-gray-400\" />\r\n                    </div>\r\n                    <div className=\"ml-5 w-0 flex-1\">\r\n                      <dl>\r\n                        <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400 truncate\">\r\n                          {metric.title}\r\n                        </dt>\r\n                        <dd>\r\n                          <div className=\"flex items-baseline\">\r\n                            <div className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                              {metric.value}\r\n                            </div>\r\n                            <div className={cn(\r\n                              'ml-2 flex items-baseline text-sm font-semibold',\r\n                              metric.changeType === 'increase'\r\n                                ? 'text-green-600 dark:text-green-400'\r\n                                : metric.changeType === 'decrease'\r\n                                ? 'text-red-600 dark:text-red-400'\r\n                                : 'text-gray-500 dark:text-gray-400'\r\n                            )}>\r\n                              {metric.changeType === 'increase' ? (\r\n                                <ArrowUpIcon className=\"self-center flex-shrink-0 h-4 w-4\" />\r\n                              ) : metric.changeType === 'decrease' ? (\r\n                                <ArrowDownIcon className=\"self-center flex-shrink-0 h-4 w-4\" />\r\n                              ) : null}\r\n                              <span className=\"sr-only\">\r\n                                {metric.changeType === 'increase' ? 'Increased' : 'Decreased'} by\r\n                              </span>\r\n                              {metric.change}\r\n                            </div>\r\n                          </div>\r\n                        </dd>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Main Content Grid */}\r\n          <div className=\"mt-8 grid grid-cols-1 gap-8 lg:grid-cols-2\">\r\n            {/* Recent Projects */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-white\">\r\n                    Recent Projects\r\n                  </h3>\r\n                  <a\r\n                    href=\"/projects\"\r\n                    className=\"text-sm font-medium text-primary-600 hover:text-primary-500 dark:text-primary-400\"\r\n                  >\r\n                    View all\r\n                  </a>\r\n                </div>\r\n                <div className=\"mt-6 flow-root\">\r\n                  <ul className=\"-my-5 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                    {recentProjects.map((project) => {\r\n                      const StatusIcon = getStatusIcon(project.status)\r\n                      return (\r\n                        <li key={project.id} className=\"py-4\">\r\n                          <div className=\"flex items-center space-x-4\">\r\n                            <div className=\"flex-shrink-0\">\r\n                              <div className={cn(\r\n                                'w-8 h-8 rounded-lg flex items-center justify-center',\r\n                                getStatusColor(project.status)\r\n                              )}>\r\n                                <StatusIcon className=\"h-4 w-4\" />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex-1 min-w-0\">\r\n                              <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\r\n                                {project.name}\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                                {project.language} • {project.framework}\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"flex-shrink-0 text-right\">\r\n                              <p className={cn(\r\n                                'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\r\n                                getStatusColor(project.status)\r\n                              )}>\r\n                                {project.status}\r\n                              </p>\r\n                              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                                {project.lastDeployment}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Recent Activity */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-white\">\r\n                  Recent Activity\r\n                </h3>\r\n                <div className=\"mt-6 flow-root\">\r\n                  <ul className=\"-my-5 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                    {recentActivity.map((activity) => (\r\n                      <li key={activity.id} className=\"py-4\">\r\n                        <div className=\"flex items-start space-x-4\">\r\n                          <div className=\"flex-shrink-0\">\r\n                            <div className={cn(\r\n                              'w-8 h-8 rounded-lg flex items-center justify-center',\r\n                              getStatusColor(activity.status)\r\n                            )}>\r\n                              <div className=\"w-2 h-2 rounded-full bg-current\" />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex-1 min-w-0\">\r\n                            <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                              {activity.title}\r\n                            </p>\r\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                              {activity.description}\r\n                            </p>\r\n                            <p className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\r\n                              {activity.timestamp}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quality Insights & System Health */}\r\n          {quality && health && (\r\n            <div className=\"mt-8 grid grid-cols-1 gap-8 lg:grid-cols-2\">\r\n              {/* Quality Insights */}\r\n              <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg\">\r\n                <div className=\"px-4 py-5 sm:p-6\">\r\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-white mb-4\">\r\n                    Quality Insights\r\n                  </h3>\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\r\n                        {quality.averageQualityScore.toFixed(1)}%\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">Average Quality</div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                        {quality.totalAnalyses}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">Total Analyses</div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">\r\n                        {quality.issuesFound}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">Issues Found</div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\r\n                        {quality.securityVulnerabilities}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">Security Issues</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* System Health */}\r\n              <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg\">\r\n                <div className=\"px-4 py-5 sm:p-6\">\r\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-white mb-4\">\r\n                    System Health\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    {Object.entries(health.services).map(([service, status]) => (\r\n                      <div key={service} className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className={cn(\r\n                            'w-2 h-2 rounded-full mr-3',\r\n                            status === 'healthy' ? 'bg-green-400' :\r\n                            status === 'degraded' ? 'bg-yellow-400' : 'bg-red-400'\r\n                          )} />\r\n                          <span className=\"text-sm font-medium text-gray-900 dark:text-white capitalize\">\r\n                            {service.replace('_', ' ')}\r\n                          </span>\r\n                        </div>\r\n                        <span className={cn(\r\n                          'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\r\n                          status === 'healthy' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400' :\r\n                          status === 'degraded' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400' :\r\n                          'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\r\n                        )}>\r\n                          {status}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                      <div>\r\n                        <div className=\"text-gray-500 dark:text-gray-400\">CPU</div>\r\n                        <div className=\"font-medium\">{health.cpu.toFixed(1)}%</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"text-gray-500 dark:text-gray-400\">Memory</div>\r\n                        <div className=\"font-medium\">{health.memory.toFixed(1)}%</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Usage Chart Placeholder */}\r\n          <div className=\"mt-8\">\r\n            <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-white mb-4\">\r\n                  Resource Usage\r\n                </h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                  {/* Projects Usage */}\r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm text-gray-500 dark:text-gray-400 mb-2\">\r\n                      <span>Projects</span>\r\n                      <span>{user?.usage.projects}/{user?.usage.limits.projects}</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                      <div\r\n                        className=\"bg-primary-600 h-2 rounded-full transition-all duration-300\"\r\n                        style={{ width: `${((user?.usage.projects || 0) / (user?.usage.limits.projects || 1)) * 100}%` }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Storage Usage */}\r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm text-gray-500 dark:text-gray-400 mb-2\">\r\n                      <span>Storage</span>\r\n                      <span>{formatBytes(user?.usage.storage || 0)}/{formatBytes(user?.usage.limits.storage || 0)}</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                      <div\r\n                        className=\"bg-primary-600 h-2 rounded-full transition-all duration-300\"\r\n                        style={{ width: `${((user?.usage.storage || 0) / (user?.usage.limits.storage || 1)) * 100}%` }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* API Calls Usage */}\r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm text-gray-500 dark:text-gray-400 mb-2\">\r\n                      <span>API Calls</span>\r\n                      <span>{formatNumber(user?.usage.apiCalls || 0)}/{formatNumber(user?.usage.limits.apiCalls || 0)}</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                      <div\r\n                        className=\"bg-primary-600 h-2 rounded-full transition-all duration-300\"\r\n                        style={{ width: `${((user?.usage.apiCalls || 0) / (user?.usage.limits.apiCalls || 1)) * 100}%` }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":["DashboardAPI","__publicField","define_process_env_default","endpoint","options","url","headers","response","error","limit","projectId","refactoringType","now","dashboardAPI","useDashboard","metrics","setMetrics","useState","activity","setActivity","health","setHealth","quality","setQuality","loading","setLoading","setError","fetchDashboardData","useCallback","metricsData","activityData","healthData","qualityData","err","runQualityAnalysis","result","newActivity","prev","runRefactoring","refreshData","useEffect","interval","status","item","apiClient","getAPIClient","getFallbackProjects","createMockProject","request","useProjects","projects","setProjects","autoRefresh","refreshInterval","filters","fetchProjects","data","createProject","project","newProject","mockProject","updateProject","id","updates","updatedProject","deleteProject","deployProject","environment","deployment","mockDeployment","refreshProjects","p","Dashboard","user","useAuth","isConnected","useWebSocket","dashboardLoading","dashboardError","projectsLoading","metricCards","FolderIcon","PlayIcon","formatNumber","ChartBarIcon","CpuChipIcon","recentProjects","formatTimeAgo","recentActivity","timestamp","date","diffMs","diffMins","diffHours","diffDays","getStatusColor","getStatusIcon","StopIcon","EyeIcon","jsxs","jsx","XCircleIcon","cn","metric","ArrowUpIcon","ArrowDownIcon","StatusIcon","service","formatBytes"],"mappings":"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"}